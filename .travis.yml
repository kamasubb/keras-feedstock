# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.

language: generic

os: 
  - linux-ppc64le
  - osx

osx_image: xcode6.4

env:
  matrix:
    
    - CONDA_PY=27
    - CONDA_PY=35
    - CONDA_PY=36


before_install:
    # Fast finish the PR.
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      (curl https://raw.githubusercontent.com/conda-forge/conda-forge-build-setup-feedstock/master/recipe/ff_ci_pr_build.py | \
          python - -v --ci "travis" "${TRAVIS_REPO_SLUG}" "${TRAVIS_BUILD_NUMBER}" "${TRAVIS_PULL_REQUEST}") || exit 1
      fi

    # Remove homebrew.
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      echo ""
      echo "Removing homebrew from Travis CI to avoid conflicts."
      curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall > ~/uninstall_homebrew
      chmod +x ~/uninstall_homebrew
      ~/uninstall_homebrew -fq
      rm ~/uninstall_homebrew
      fi


install:
    # Install Miniconda.
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      echo ""
      echo "Installing a fresh version of Miniconda."
      MINICONDA_URL="https://repo.continuum.io/miniconda"
      MINICONDA_FILE="Miniconda3-latest-MacOSX-x86_64.sh"
      curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -b
      fi
    - |
      if [ "$TRAVIS_OS_NAME" == "linux-ppc64le" ]; then
      echo "Installing a fresh version of Miniconda."
      MINICONDA_URL="https://repo.continuum.io/miniconda"
      MINICONDA_FILE="Miniconda3-latest-Linux-ppc64le.sh"
      MINICONDA_FILE="Miniconda3-4.3.27-Linux-ppc64le.sh"
      curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -b -p $HOME/miniconda;
      fi

    # Configure conda.
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      echo ""
      echo "Configuring conda."
      source /Users/travis/miniconda3/bin/activate root
      conda config --remove channels defaults
      conda config --add channels defaults
      conda config --add channels conda-forge
      conda config --set show_channel_urls true
      conda install --yes --quiet conda-forge-build-setup
      source run_conda_forge_build_setup
      fi
    - |
      if [ "$TRAVIS_OS_NAME" == "linux-ppc64le" ]; then
      echo "Configuring conda."
      export PATH="$HOME/miniconda/bin:$PATH"
      hash -r
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda info -a
      conda config --add channels defaults
      conda config --add channels conda-forge
      conda config --set show_channel_urls true
      conda install -n root conda-build
      fi
    - |
      if [ "$TRAVIS_OS_NAME" == "linux-ppc64le-dummy" ]; then
      sudo apt-get install -y git
      curr_dir=${PWD}
      echo ${curr_dir}
      cd ${HOME}
      git clone https://github.com/kamasubb/conda-forge-build-setup-feedstock.git
      cd conda-forge-build-setup-feedstock
      conda build --no-test recipe
      build_setup_package=`ls  ${HOME}/miniconda/conda-bld/linux-ppc64le/conda-forge-build-setup*.tar.bz2`
      echo ${build_setup_package}
      conda install --yes --use-local ${build_setup_package}
      conda list | grep conda-forge-build-setup
      which run_conda_forge_build_setup
      source run_conda_forge_build_setup
      cd ${curr_dir}
      git remote -v
      df -H
      fi
#      PY_PATH=`find $HOME/miniconda/lib -name site-packages | head -1` 
#      export PYTHONPATH=${PY_PATH}:${PYTHONPATH}
#      cd ${curr_dir}
#      fi

script:
  - conda build ./recipe

  - |
    if [ "$TRAVIS_OS_NAME" == "linux-ppc64le" ]; then
    sudo apt-get install -y git
    curr_dir=${PWD}
    echo ${curr_dir}
    cd ${HOME}
    git clone https://github.com/kamasubb/conda-forge-build-setup-feedstock.git
    cd conda-forge-build-setup-feedstock
    conda build --no-test recipe
    build_setup_package=`ls  ${HOME}/miniconda/conda-bld/linux-ppc64le/conda-forge-build-setup*.tar.bz2`
    echo ${build_setup_package}
    conda install --yes --use-local ${build_setup_package}
    conda list | grep conda-forge-build-setup
    which run_conda_forge_build_setup
    source run_conda_forge_build_setup
    cd ${curr_dir}
    fi

  -  upload_or_check_non_existence ./recipe conda-forge --channel=main
